--------------------------------------------------------
--! File generated by asn2aadl v2.1.10: DO NOT EDIT !
--------------------------------------------------------
--! InputASN1FileChecksum:6b4bd40c99369d69ded36341235414de:/root/esrocos_workspace/install/types/core/asn/mars/Mars.asn:
--! InputASN1FileChecksum:8b48ea21181b7fd794d5f31603e909cd:/root/esrocos_workspace/install/types/core/asn/lifecycle/ApplicationCodes.asn:
--! InputASN1FileChecksum:a855c029d45fd434e8c58e952bfb9f12:/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn:
--! InputASN1FileChecksum:ce4a6df0b187ab4164246aca50e6f4a6:/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn:
--! InputASN1FileChecksum:ff7ff307f5bb352ad5b75e4943651fdf:/root/esrocos_workspace/install/types/core/asn/vizkit3d/Vizkit3D.asn:
--! InputASN1FileChecksum:29b930536c0793a1f5d6d0bf1ea95d67:/root/esrocos_workspace/install/types/base/Wrench.asn:
--! InputASN1FileChecksum:6f5b1b6cfebd3b4333e3eec6ec925b08:/root/esrocos_workspace/install/types/base/NamedVector.asn:
--! InputASN1FileChecksum:4096d38a080a00fb88abab12d9f1683e:/root/esrocos_workspace/install/types/base/Angle.asn:
--! InputASN1FileChecksum:fc979a85d14373e4b19f90aa58f72763:/root/esrocos_workspace/install/types/base/JointState.asn:
--! InputASN1FileChecksum:c0eae7403aa4538e69d42f8391f711d5:/root/esrocos_workspace/install/types/base/JointLimits.asn:
--! InputASN1FileChecksum:3693a153aec71020ab51bc686fecf3fe:/root/esrocos_workspace/install/types/base/taste-extended.asn:
--! InputASN1FileChecksum:4f815d74e92f3ed8bde3f87f51e7f43c:/root/esrocos_workspace/install/types/base/Temperature.asn:
--! InputASN1FileChecksum:3f5e6b74988b0a236246564759276fda:/root/esrocos_workspace/install/types/base/Point.asn:
--! InputASN1FileChecksum:b8a257b8ec9e2230c4448aa60c30699a:/root/esrocos_workspace/install/types/base/Trajectory.asn:
--! InputASN1FileChecksum:2f3a52127e6950eb2cd3174603fbf71a:/root/esrocos_workspace/install/types/base/JointLimitRange.asn:
--! InputASN1FileChecksum:19a16d10a87863c8cc51159e116eb827:/root/esrocos_workspace/install/types/base/Pressure.asn:
--! InputASN1FileChecksum:941e66fd5127a4a6d627fab42a7002f9:/root/esrocos_workspace/install/types/base/JointsTrajectory.asn:
--! InputASN1FileChecksum:a30193b44884a891d9308984ff2470ce:/root/esrocos_workspace/install/types/base/Time.asn:
--! InputASN1FileChecksum:59e474e83316350efea0bc96b81aab63:/root/esrocos_workspace/install/types/base/RigidBodyAcceleration.asn:
--! InputASN1FileChecksum:db55ca9a947461088a29b34e07901184:/root/esrocos_workspace/install/types/base/Wrenches.asn:
--! InputASN1FileChecksum:528f7eb2702548dfb942559e0a4611c7:/root/esrocos_workspace/install/types/base/BodyState.asn:
--! InputASN1FileChecksum:ca294179d36d856e612459b7f9c1c370:/root/esrocos_workspace/install/types/base/TwistWithCovariance.asn:
--! InputASN1FileChecksum:aaa0f31ad0678d773c23566885ceb769:/root/esrocos_workspace/install/types/base/RigidBodyState.asn:
--! InputASN1FileChecksum:c839e881ed430562dca2d21eb99e88ce:/root/esrocos_workspace/install/types/base/Pose.asn:
--! InputASN1FileChecksum:4fa419e1f91d4188e112b7da6611c25b:/root/esrocos_workspace/install/types/base/Waypoint.asn:
--! InputASN1FileChecksum:33b98efdd554dd6064cd003908829121:/root/esrocos_workspace/install/types/base/Motion2D.asn:
--! InputASN1FileChecksum:9785833c851ca74190ff440e5b58c927:/root/esrocos_workspace/install/types/base/Joints.asn:
--! InputASN1FileChecksum:4700ece06fd3ee1dd3f6cbde3caba96e:/root/esrocos_workspace/install/types/base/taste-types.asn:
--! InputASN1FileChecksum:47a9b23568fded6f78099c602c007942:/root/esrocos_workspace/install/types/base/TransformWithCovariance.asn:
--! InputASN1FileChecksum:3b2dfd15827d27f6a0edf771ed5bbced:/root/esrocos_workspace/install/types/base/Covariance.asn:
--! InputASN1FileChecksum:f02b957b862d3bfa296e344dfe12ec18:/root/esrocos_workspace/install/types/base/Eigen.asn:
--! InputASN1FileChecksum:44bfdfb781981152e9ad2581d1f3ccdc:/root/esrocos_workspace/install/types/sensor_samples/IMUSensors.asn:
--! InputASN1FileChecksum:1366440f7201d59531ceecb1ae7d5673:/root/esrocos_workspace/install/types/sensor_samples/Sonar.asn:
--! InputASN1FileChecksum:3ffa3636c39b3316119d847ab23fba01:/root/esrocos_workspace/install/types/sensor_samples/SonarScan.asn:
--! InputASN1FileChecksum:97a9c90b56b2e31b06b2a40e3902e63a:/root/esrocos_workspace/install/types/sensor_samples/DepthMap.asn:
--! InputASN1FileChecksum:387648f5ae899b296b6c558360eb25c9:/root/esrocos_workspace/install/types/sensor_samples/Frame.asn:
--! InputASN1FileChecksum:31447e0cd94b09a6a10ef8dbb3e1de0e:/root/esrocos_workspace/install/types/sensor_samples/DistanceImage.asn:
--! InputASN1FileChecksum:d5de2546162d3095c5bccab0a4026eaf:/root/esrocos_workspace/install/types/sensor_samples/SonarBeam.asn:
--! InputASN1FileChecksum:90fc8470649fee1b98f9317cd670595b:/root/esrocos_workspace/install/types/sensor_samples/LaserScan.asn:
--! InputASN1FileChecksum:474e7ad4516f0237a0cedb85454dafbf:/root/esrocos_workspace/install/types/sensor_samples/CompressedFrame.asn:
--! InputASN1FileChecksum:6ebd86d6159e212d2b206c7129c1ece8:/root/esrocos_workspace/install/types/sensor_samples/Pointcloud.asn:
--------------------------------------------------------

package DataView

public

DATA JointTrajectory
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointsTrajectory.asn");
    Ada_Package_Name => "JointsTrajectory_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 3901; suggested aligned message buffer is...
    Source_Data_Size => 3904 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "JointTrajectory";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END JointTrajectory;

DATA JointTrajectory_Buffer_Max
END JointTrajectory_Buffer_Max;

DATA IMPLEMENTATION JointTrajectory_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type JointTrajectory
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (3904); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END JointTrajectory_Buffer_Max.impl;

DATA JointTrajectory_Buffer
END JointTrajectory_Buffer;

DATA IMPLEMENTATION JointTrajectory_Buffer.impl
    -- Buffer to hold a marshalled data of type JointTrajectory
SUBCOMPONENTS
    Buffer : data JointTrajectory_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END JointTrajectory_Buffer.impl;

DATA PROJECTION_TYPE
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/DepthMap.asn");
    Ada_Package_Name => "DepthMap_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PROJECTION-TYPE";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END PROJECTION_TYPE;

DATA PROJECTION_TYPE_Buffer_Max
END PROJECTION_TYPE_Buffer_Max;

DATA IMPLEMENTATION PROJECTION_TYPE_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PROJECTION_TYPE
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PROJECTION_TYPE_Buffer_Max.impl;

DATA PROJECTION_TYPE_Buffer
END PROJECTION_TYPE_Buffer;

DATA IMPLEMENTATION PROJECTION_TYPE_Buffer.impl
    -- Buffer to hold a marshalled data of type PROJECTION_TYPE
SUBCOMPONENTS
    Buffer : data PROJECTION_TYPE_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END PROJECTION_TYPE_Buffer.impl;

DATA AngleAxisd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AngleAxisd";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END AngleAxisd;

DATA AngleAxisd_Buffer_Max
END AngleAxisd_Buffer_Max;

DATA IMPLEMENTATION AngleAxisd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AngleAxisd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END AngleAxisd_Buffer_Max.impl;

DATA AngleAxisd_Buffer
END AngleAxisd_Buffer;

DATA IMPLEMENTATION AngleAxisd_Buffer.impl
    -- Buffer to hold a marshalled data of type AngleAxisd
SUBCOMPONENTS
    Buffer : data AngleAxisd_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AngleAxisd_Buffer.impl;

DATA CompressedFrame
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/CompressedFrame.asn");
    Ada_Package_Name => "CompressedFrame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 2102424; suggested aligned message buffer is...
    Source_Data_Size => 2102424 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "CompressedFrame";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END CompressedFrame;

DATA CompressedFrame_Buffer_Max
END CompressedFrame_Buffer_Max;

DATA IMPLEMENTATION CompressedFrame_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type CompressedFrame
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (2102424); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END CompressedFrame_Buffer_Max.impl;

DATA CompressedFrame_Buffer
END CompressedFrame_Buffer;

DATA IMPLEMENTATION CompressedFrame_Buffer.impl
    -- Buffer to hold a marshalled data of type CompressedFrame
SUBCOMPONENTS
    Buffer : data CompressedFrame_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END CompressedFrame_Buffer.impl;

DATA LC_StartStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-StartStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_StartStatus;

DATA LC_StartStatus_Buffer_Max
END LC_StartStatus_Buffer_Max;

DATA IMPLEMENTATION LC_StartStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_StartStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_StartStatus_Buffer_Max.impl;

DATA LC_StartStatus_Buffer
END LC_StartStatus_Buffer;

DATA IMPLEMENTATION LC_StartStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_StartStatus
SUBCOMPONENTS
    Buffer : data LC_StartStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_StartStatus_Buffer.impl;

DATA LC_CleanupResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-CleanupResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_CleanupResult;

DATA LC_CleanupResult_Buffer_Max
END LC_CleanupResult_Buffer_Max;

DATA IMPLEMENTATION LC_CleanupResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_CleanupResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_CleanupResult_Buffer_Max.impl;

DATA LC_CleanupResult_Buffer
END LC_CleanupResult_Buffer;

DATA IMPLEMENTATION LC_CleanupResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_CleanupResult
SUBCOMPONENTS
    Buffer : data LC_CleanupResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_CleanupResult_Buffer.impl;

DATA Transform3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Transform3d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Transform3d;

DATA Transform3d_Buffer_Max
END Transform3d_Buffer_Max;

DATA IMPLEMENTATION Transform3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Transform3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Transform3d_Buffer_Max.impl;

DATA Transform3d_Buffer
END Transform3d_Buffer;

DATA IMPLEMENTATION Transform3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Transform3d
SUBCOMPONENTS
    Buffer : data Transform3d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Transform3d_Buffer.impl;

DATA AngleSegment
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Angle.asn");
    Ada_Package_Name => "Angle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 26; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AngleSegment";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END AngleSegment;

DATA AngleSegment_Buffer_Max
END AngleSegment_Buffer_Max;

DATA IMPLEMENTATION AngleSegment_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AngleSegment
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END AngleSegment_Buffer_Max.impl;

DATA AngleSegment_Buffer
END AngleSegment_Buffer;

DATA IMPLEMENTATION AngleSegment_Buffer.impl
    -- Buffer to hold a marshalled data of type AngleSegment
SUBCOMPONENTS
    Buffer : data AngleSegment_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AngleSegment_Buffer.impl;

DATA Pressure
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pressure.asn");
    Ada_Package_Name => "Pressure_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 25; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pressure";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Pressure;

DATA Pressure_Buffer_Max
END Pressure_Buffer_Max;

DATA IMPLEMENTATION Pressure_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pressure
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Pressure_Buffer_Max.impl;

DATA Pressure_Buffer
END Pressure_Buffer;

DATA IMPLEMENTATION Pressure_Buffer.impl
    -- Buffer to hold a marshalled data of type Pressure
SUBCOMPONENTS
    Buffer : data Pressure_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pressure_Buffer.impl;

DATA Frame_attrib_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Frame.asn");
    Ada_Package_Name => "Frame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 520; suggested aligned message buffer is...
    Source_Data_Size => 520 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame-attrib-t";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Frame_attrib_t;

DATA Frame_attrib_t_Buffer_Max
END Frame_attrib_t_Buffer_Max;

DATA IMPLEMENTATION Frame_attrib_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame_attrib_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (520); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Frame_attrib_t_Buffer_Max.impl;

DATA Frame_attrib_t_Buffer
END Frame_attrib_t_Buffer;

DATA IMPLEMENTATION Frame_attrib_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame_attrib_t
SUBCOMPONENTS
    Buffer : data Frame_attrib_t_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_attrib_t_Buffer.impl;

DATA RigidBodyAcceleration
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/RigidBodyAcceleration.asn");
    Ada_Package_Name => "RigidBodyAcceleration_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 170; suggested aligned message buffer is...
    Source_Data_Size => 176 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RigidBodyAcceleration";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END RigidBodyAcceleration;

DATA RigidBodyAcceleration_Buffer_Max
END RigidBodyAcceleration_Buffer_Max;

DATA IMPLEMENTATION RigidBodyAcceleration_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RigidBodyAcceleration
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (176); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END RigidBodyAcceleration_Buffer_Max.impl;

DATA RigidBodyAcceleration_Buffer
END RigidBodyAcceleration_Buffer;

DATA IMPLEMENTATION RigidBodyAcceleration_Buffer.impl
    -- Buffer to hold a marshalled data of type RigidBodyAcceleration
SUBCOMPONENTS
    Buffer : data RigidBodyAcceleration_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END RigidBodyAcceleration_Buffer.impl;

DATA Matrix4d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix4d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix4d;

DATA Matrix4d_Buffer_Max
END Matrix4d_Buffer_Max;

DATA IMPLEMENTATION Matrix4d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix4d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Matrix4d_Buffer_Max.impl;

DATA Matrix4d_Buffer
END Matrix4d_Buffer;

DATA IMPLEMENTATION Matrix4d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix4d
SUBCOMPONENTS
    Buffer : data Matrix4d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix4d_Buffer.impl;

DATA LC_UpdateStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-UpdateStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_UpdateStatus;

DATA LC_UpdateStatus_Buffer_Max
END LC_UpdateStatus_Buffer_Max;

DATA IMPLEMENTATION LC_UpdateStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_UpdateStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_UpdateStatus_Buffer_Max.impl;

DATA LC_UpdateStatus_Buffer
END LC_UpdateStatus_Buffer;

DATA IMPLEMENTATION LC_UpdateStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_UpdateStatus
SUBCOMPONENTS
    Buffer : data LC_UpdateStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_UpdateStatus_Buffer.impl;

DATA Frame_size_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Frame.asn");
    Ada_Package_Name => "Frame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame-size-t";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Frame_size_t;

DATA Frame_size_t_Buffer_Max
END Frame_size_t_Buffer_Max;

DATA IMPLEMENTATION Frame_size_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame_size_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Frame_size_t_Buffer_Max.impl;

DATA Frame_size_t_Buffer
END Frame_size_t_Buffer;

DATA IMPLEMENTATION Frame_size_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame_size_t
SUBCOMPONENTS
    Buffer : data Frame_size_t_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_size_t_Buffer.impl;

DATA Covariance
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Covariance.asn");
    Ada_Package_Name => "Covariance_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 471; suggested aligned message buffer is...
    Source_Data_Size => 472 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Covariance";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Covariance;

DATA Covariance_Buffer_Max
END Covariance_Buffer_Max;

DATA IMPLEMENTATION Covariance_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Covariance
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (472); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Covariance_Buffer_Max.impl;

DATA Covariance_Buffer
END Covariance_Buffer;

DATA IMPLEMENTATION Covariance_Buffer.impl
    -- Buffer to hold a marshalled data of type Covariance
SUBCOMPONENTS
    Buffer : data Covariance_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Covariance_Buffer.impl;

DATA LC_Code
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ApplicationCodes.asn");
    Ada_Package_Name => "ApplicationCodes_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-Code";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_Code;

DATA LC_Code_Buffer_Max
END LC_Code_Buffer_Max;

DATA IMPLEMENTATION LC_Code_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_Code
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_Code_Buffer_Max.impl;

DATA LC_Code_Buffer
END LC_Code_Buffer;

DATA IMPLEMENTATION LC_Code_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_Code
SUBCOMPONENTS
    Buffer : data LC_Code_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_Code_Buffer.impl;

DATA LC_ErrorResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-ErrorResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_ErrorResult;

DATA LC_ErrorResult_Buffer_Max
END LC_ErrorResult_Buffer_Max;

DATA IMPLEMENTATION LC_ErrorResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_ErrorResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_ErrorResult_Buffer_Max.impl;

DATA LC_ErrorResult_Buffer
END LC_ErrorResult_Buffer;

DATA IMPLEMENTATION LC_ErrorResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_ErrorResult
SUBCOMPONENTS
    Buffer : data LC_ErrorResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_ErrorResult_Buffer.impl;

DATA LC_Report
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-Report";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_Report;

DATA LC_Report_Buffer_Max
END LC_Report_Buffer_Max;

DATA IMPLEMENTATION LC_Report_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_Report
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_Report_Buffer_Max.impl;

DATA LC_Report_Buffer
END LC_Report_Buffer;

DATA IMPLEMENTATION LC_Report_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_Report
SUBCOMPONENTS
    Buffer : data LC_Report_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_Report_Buffer.impl;

DATA Angle
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Angle.asn");
    Ada_Package_Name => "Angle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Angle";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Angle;

DATA Angle_Buffer_Max
END Angle_Buffer_Max;

DATA IMPLEMENTATION Angle_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Angle
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Angle_Buffer_Max.impl;

DATA Angle_Buffer
END Angle_Buffer;

DATA IMPLEMENTATION Angle_Buffer.impl
    -- Buffer to hold a marshalled data of type Angle
SUBCOMPONENTS
    Buffer : data Angle_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Angle_Buffer.impl;

DATA RigidBodyState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/RigidBodyState.asn");
    Ada_Package_Name => "RigidBodyState_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1169; suggested aligned message buffer is...
    Source_Data_Size => 1176 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RigidBodyState";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END RigidBodyState;

DATA RigidBodyState_Buffer_Max
END RigidBodyState_Buffer_Max;

DATA IMPLEMENTATION RigidBodyState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RigidBodyState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1176); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END RigidBodyState_Buffer_Max.impl;

DATA RigidBodyState_Buffer
END RigidBodyState_Buffer;

DATA IMPLEMENTATION RigidBodyState_Buffer.impl
    -- Buffer to hold a marshalled data of type RigidBodyState
SUBCOMPONENTS
    Buffer : data RigidBodyState_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END RigidBodyState_Buffer.impl;

DATA LC_CleanupStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-CleanupStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_CleanupStatus;

DATA LC_CleanupStatus_Buffer_Max
END LC_CleanupStatus_Buffer_Max;

DATA IMPLEMENTATION LC_CleanupStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_CleanupStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_CleanupStatus_Buffer_Max.impl;

DATA LC_CleanupStatus_Buffer
END LC_CleanupStatus_Buffer;

DATA IMPLEMENTATION LC_CleanupStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_CleanupStatus
SUBCOMPONENTS
    Buffer : data LC_CleanupStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_CleanupStatus_Buffer.impl;

DATA LoggerCriticality
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn");
    Ada_Package_Name => "Logger_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LoggerCriticality";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LoggerCriticality;

DATA LoggerCriticality_Buffer_Max
END LoggerCriticality_Buffer_Max;

DATA IMPLEMENTATION LoggerCriticality_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LoggerCriticality
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LoggerCriticality_Buffer_Max.impl;

DATA LoggerCriticality_Buffer
END LoggerCriticality_Buffer;

DATA IMPLEMENTATION LoggerCriticality_Buffer.impl
    -- Buffer to hold a marshalled data of type LoggerCriticality
SUBCOMPONENTS
    Buffer : data LoggerCriticality_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LoggerCriticality_Buffer.impl;

DATA Vector4d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector4d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector4d;

DATA Vector4d_Buffer_Max
END Vector4d_Buffer_Max;

DATA IMPLEMENTATION Vector4d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector4d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Vector4d_Buffer_Max.impl;

DATA Vector4d_Buffer
END Vector4d_Buffer;

DATA IMPLEMENTATION Vector4d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector4d
SUBCOMPONENTS
    Buffer : data Vector4d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector4d_Buffer.impl;

DATA TwistWithCovariance
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/TwistWithCovariance.asn");
    Ada_Package_Name => "TwistWithCovariance_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 550; suggested aligned message buffer is...
    Source_Data_Size => 552 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TwistWithCovariance";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TwistWithCovariance;

DATA TwistWithCovariance_Buffer_Max
END TwistWithCovariance_Buffer_Max;

DATA IMPLEMENTATION TwistWithCovariance_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TwistWithCovariance
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (552); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TwistWithCovariance_Buffer_Max.impl;

DATA TwistWithCovariance_Buffer
END TwistWithCovariance_Buffer;

DATA IMPLEMENTATION TwistWithCovariance_Buffer.impl
    -- Buffer to hold a marshalled data of type TwistWithCovariance
SUBCOMPONENTS
    Buffer : data TwistWithCovariance_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TwistWithCovariance_Buffer.impl;

DATA T_UInt16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt16";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt16;

DATA T_UInt16_Buffer_Max
END T_UInt16_Buffer_Max;

DATA IMPLEMENTATION T_UInt16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt16_Buffer_Max.impl;

DATA T_UInt16_Buffer
END T_UInt16_Buffer;

DATA IMPLEMENTATION T_UInt16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt16
SUBCOMPONENTS
    Buffer : data T_UInt16_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt16_Buffer.impl;

DATA BodyState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/BodyState.asn");
    Ada_Package_Name => "BodyState_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1124; suggested aligned message buffer is...
    Source_Data_Size => 1128 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "BodyState";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END BodyState;

DATA BodyState_Buffer_Max
END BodyState_Buffer_Max;

DATA IMPLEMENTATION BodyState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type BodyState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1128); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END BodyState_Buffer_Max.impl;

DATA BodyState_Buffer
END BodyState_Buffer;

DATA IMPLEMENTATION BodyState_Buffer.impl
    -- Buffer to hold a marshalled data of type BodyState
SUBCOMPONENTS
    Buffer : data BodyState_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END BodyState_Buffer.impl;

DATA VectorXd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1301; suggested aligned message buffer is...
    Source_Data_Size => 1304 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VectorXd";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END VectorXd;

DATA VectorXd_Buffer_Max
END VectorXd_Buffer_Max;

DATA IMPLEMENTATION VectorXd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VectorXd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1304); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END VectorXd_Buffer_Max.impl;

DATA VectorXd_Buffer
END VectorXd_Buffer;

DATA IMPLEMENTATION VectorXd_Buffer.impl
    -- Buffer to hold a marshalled data of type VectorXd
SUBCOMPONENTS
    Buffer : data VectorXd_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VectorXd_Buffer.impl;

DATA DistanceImage
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/DistanceImage.asn");
    Ada_Package_Name => "DistanceImage_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 849; suggested aligned message buffer is...
    Source_Data_Size => 856 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "DistanceImage";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END DistanceImage;

DATA DistanceImage_Buffer_Max
END DistanceImage_Buffer_Max;

DATA IMPLEMENTATION DistanceImage_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type DistanceImage
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (856); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END DistanceImage_Buffer_Max.impl;

DATA DistanceImage_Buffer
END DistanceImage_Buffer;

DATA IMPLEMENTATION DistanceImage_Buffer.impl
    -- Buffer to hold a marshalled data of type DistanceImage
SUBCOMPONENTS
    Buffer : data DistanceImage_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END DistanceImage_Buffer.impl;

DATA Sonar
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Sonar.asn");
    Ada_Package_Name => "Sonar_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 2354; suggested aligned message buffer is...
    Source_Data_Size => 2360 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Sonar";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Sonar;

DATA Sonar_Buffer_Max
END Sonar_Buffer_Max;

DATA IMPLEMENTATION Sonar_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Sonar
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (2360); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Sonar_Buffer_Max.impl;

DATA Sonar_Buffer
END Sonar_Buffer;

DATA IMPLEMENTATION Sonar_Buffer.impl
    -- Buffer to hold a marshalled data of type Sonar
SUBCOMPONENTS
    Buffer : data Sonar_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Sonar_Buffer.impl;

DATA Matrix2d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix2d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix2d;

DATA Matrix2d_Buffer_Max
END Matrix2d_Buffer_Max;

DATA IMPLEMENTATION Matrix2d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix2d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Matrix2d_Buffer_Max.impl;

DATA Matrix2d_Buffer
END Matrix2d_Buffer;

DATA IMPLEMENTATION Matrix2d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix2d
SUBCOMPONENTS
    Buffer : data Matrix2d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix2d_Buffer.impl;

DATA Pose
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pose.asn");
    Ada_Package_Name => "Pose_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 92; suggested aligned message buffer is...
    Source_Data_Size => 96 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pose";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Pose;

DATA Pose_Buffer_Max
END Pose_Buffer_Max;

DATA IMPLEMENTATION Pose_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pose
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (96); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Pose_Buffer_Max.impl;

DATA Pose_Buffer
END Pose_Buffer;

DATA IMPLEMENTATION Pose_Buffer.impl
    -- Buffer to hold a marshalled data of type Pose
SUBCOMPONENTS
    Buffer : data Pose_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pose_Buffer.impl;

DATA JointState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointState.asn");
    Ada_Package_Name => "JointState_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 65; suggested aligned message buffer is...
    Source_Data_Size => 72 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "JointState";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END JointState;

DATA JointState_Buffer_Max
END JointState_Buffer_Max;

DATA IMPLEMENTATION JointState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type JointState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (72); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END JointState_Buffer_Max.impl;

DATA JointState_Buffer
END JointState_Buffer;

DATA IMPLEMENTATION JointState_Buffer.impl
    -- Buffer to hold a marshalled data of type JointState
SUBCOMPONENTS
    Buffer : data JointState_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END JointState_Buffer.impl;

DATA LC_Request
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-Request";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_Request;

DATA LC_Request_Buffer_Max
END LC_Request_Buffer_Max;

DATA IMPLEMENTATION LC_Request_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_Request
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_Request_Buffer_Max.impl;

DATA LC_Request_Buffer
END LC_Request_Buffer;

DATA IMPLEMENTATION LC_Request_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_Request
SUBCOMPONENTS
    Buffer : data LC_Request_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_Request_Buffer.impl;

DATA TransformWithCovariance
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/TransformWithCovariance.asn");
    Ada_Package_Name => "TransformWithCovariance_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 563; suggested aligned message buffer is...
    Source_Data_Size => 568 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TransformWithCovariance";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TransformWithCovariance;

DATA TransformWithCovariance_Buffer_Max
END TransformWithCovariance_Buffer_Max;

DATA IMPLEMENTATION TransformWithCovariance_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TransformWithCovariance
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (568); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TransformWithCovariance_Buffer_Max.impl;

DATA TransformWithCovariance_Buffer
END TransformWithCovariance_Buffer;

DATA IMPLEMENTATION TransformWithCovariance_Buffer.impl
    -- Buffer to hold a marshalled data of type TransformWithCovariance
SUBCOMPONENTS
    Buffer : data TransformWithCovariance_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TransformWithCovariance_Buffer.impl;

DATA Time
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Time.asn");
    Ada_Package_Name => "Time_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Time";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Time;

DATA Time_Buffer_Max
END Time_Buffer_Max;

DATA IMPLEMENTATION Time_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Time
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Time_Buffer_Max.impl;

DATA Time_Buffer
END Time_Buffer;

DATA IMPLEMENTATION Time_Buffer.impl
    -- Buffer to hold a marshalled data of type Time
SUBCOMPONENTS
    Buffer : data Time_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Time_Buffer.impl;

DATA InvalidName
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/NamedVector.asn");
    Ada_Package_Name => "NamedVector_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 260; suggested aligned message buffer is...
    Source_Data_Size => 264 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "InvalidName";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END InvalidName;

DATA InvalidName_Buffer_Max
END InvalidName_Buffer_Max;

DATA IMPLEMENTATION InvalidName_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type InvalidName
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (264); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END InvalidName_Buffer_Max.impl;

DATA InvalidName_Buffer
END InvalidName_Buffer;

DATA IMPLEMENTATION InvalidName_Buffer.impl
    -- Buffer to hold a marshalled data of type InvalidName
SUBCOMPONENTS
    Buffer : data InvalidName_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END InvalidName_Buffer.impl;

DATA LC_UpdateResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-UpdateResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_UpdateResult;

DATA LC_UpdateResult_Buffer_Max
END LC_UpdateResult_Buffer_Max;

DATA IMPLEMENTATION LC_UpdateResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_UpdateResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_UpdateResult_Buffer_Max.impl;

DATA LC_UpdateResult_Buffer
END LC_UpdateResult_Buffer;

DATA IMPLEMENTATION LC_UpdateResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_UpdateResult
SUBCOMPONENTS
    Buffer : data LC_UpdateResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_UpdateResult_Buffer.impl;

DATA Frame_mode_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Frame.asn");
    Ada_Package_Name => "Frame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame-mode-t";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END Frame_mode_t;

DATA Frame_mode_t_Buffer_Max
END Frame_mode_t_Buffer_Max;

DATA IMPLEMENTATION Frame_mode_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame_mode_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Frame_mode_t_Buffer_Max.impl;

DATA Frame_mode_t_Buffer
END Frame_mode_t_Buffer;

DATA IMPLEMENTATION Frame_mode_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame_mode_t
SUBCOMPONENTS
    Buffer : data Frame_mode_t_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_mode_t_Buffer.impl;

DATA LC_StartResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-StartResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_StartResult;

DATA LC_StartResult_Buffer_Max
END LC_StartResult_Buffer_Max;

DATA IMPLEMENTATION LC_StartResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_StartResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_StartResult_Buffer_Max.impl;

DATA LC_StartResult_Buffer
END LC_StartResult_Buffer;

DATA IMPLEMENTATION LC_StartResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_StartResult
SUBCOMPONENTS
    Buffer : data LC_StartResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_StartResult_Buffer.impl;

DATA Affine3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Affine3d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Affine3d;

DATA Affine3d_Buffer_Max
END Affine3d_Buffer_Max;

DATA IMPLEMENTATION Affine3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Affine3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Affine3d_Buffer_Max.impl;

DATA Affine3d_Buffer
END Affine3d_Buffer;

DATA IMPLEMENTATION Affine3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Affine3d
SUBCOMPONENTS
    Buffer : data Affine3d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Affine3d_Buffer.impl;

DATA LC_ConfigureStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-ConfigureStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_ConfigureStatus;

DATA LC_ConfigureStatus_Buffer_Max
END LC_ConfigureStatus_Buffer_Max;

DATA IMPLEMENTATION LC_ConfigureStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_ConfigureStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_ConfigureStatus_Buffer_Max.impl;

DATA LC_ConfigureStatus_Buffer
END LC_ConfigureStatus_Buffer;

DATA IMPLEMENTATION LC_ConfigureStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_ConfigureStatus
SUBCOMPONENTS
    Buffer : data LC_ConfigureStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_ConfigureStatus_Buffer.impl;

DATA Frame
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Frame.asn");
    Ada_Package_Name => "Frame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 2361984; suggested aligned message buffer is...
    Source_Data_Size => 2361984 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Frame;

DATA Frame_Buffer_Max
END Frame_Buffer_Max;

DATA IMPLEMENTATION Frame_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (2361984); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Frame_Buffer_Max.impl;

DATA Frame_Buffer
END Frame_Buffer;

DATA IMPLEMENTATION Frame_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame
SUBCOMPONENTS
    Buffer : data Frame_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-types.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA Wrenches
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Wrenches.asn");
    Ada_Package_Name => "Wrenches_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 5700; suggested aligned message buffer is...
    Source_Data_Size => 5704 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Wrenches";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Wrenches;

DATA Wrenches_Buffer_Max
END Wrenches_Buffer_Max;

DATA IMPLEMENTATION Wrenches_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Wrenches
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (5704); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Wrenches_Buffer_Max.impl;

DATA Wrenches_Buffer
END Wrenches_Buffer;

DATA IMPLEMENTATION Wrenches_Buffer.impl
    -- Buffer to hold a marshalled data of type Wrenches
SUBCOMPONENTS
    Buffer : data Wrenches_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Wrenches_Buffer.impl;

DATA Wrench
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Wrench.asn");
    Ada_Package_Name => "Wrench_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 91; suggested aligned message buffer is...
    Source_Data_Size => 96 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Wrench";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Wrench;

DATA Wrench_Buffer_Max
END Wrench_Buffer_Max;

DATA IMPLEMENTATION Wrench_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Wrench
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (96); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Wrench_Buffer_Max.impl;

DATA Wrench_Buffer
END Wrench_Buffer;

DATA IMPLEMENTATION Wrench_Buffer.impl
    -- Buffer to hold a marshalled data of type Wrench
SUBCOMPONENTS
    Buffer : data Wrench_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Wrench_Buffer.impl;

DATA SonarScan
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/SonarScan.asn");
    Ada_Package_Name => "SonarScan_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1544; suggested aligned message buffer is...
    Source_Data_Size => 1544 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SonarScan";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END SonarScan;

DATA SonarScan_Buffer_Max
END SonarScan_Buffer_Max;

DATA IMPLEMENTATION SonarScan_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SonarScan
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1544); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END SonarScan_Buffer_Max.impl;

DATA SonarScan_Buffer
END SonarScan_Buffer;

DATA IMPLEMENTATION SonarScan_Buffer.impl
    -- Buffer to hold a marshalled data of type SonarScan
SUBCOMPONENTS
    Buffer : data SonarScan_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SonarScan_Buffer.impl;

DATA SonarBeam
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/SonarBeam.asn");
    Ada_Package_Name => "SonarBeam_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 544; suggested aligned message buffer is...
    Source_Data_Size => 544 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SonarBeam";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END SonarBeam;

DATA SonarBeam_Buffer_Max
END SonarBeam_Buffer_Max;

DATA IMPLEMENTATION SonarBeam_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SonarBeam
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (544); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END SonarBeam_Buffer_Max.impl;

DATA SonarBeam_Buffer
END SonarBeam_Buffer;

DATA IMPLEMENTATION SonarBeam_Buffer.impl
    -- Buffer to hold a marshalled data of type SonarBeam
SUBCOMPONENTS
    Buffer : data SonarBeam_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SonarBeam_Buffer.impl;

DATA Position
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pose.asn");
    Ada_Package_Name => "Pose_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Position";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Position;

DATA Position_Buffer_Max
END Position_Buffer_Max;

DATA IMPLEMENTATION Position_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Position
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Position_Buffer_Max.impl;

DATA Position_Buffer
END Position_Buffer;

DATA IMPLEMENTATION Position_Buffer.impl
    -- Buffer to hold a marshalled data of type Position
SUBCOMPONENTS
    Buffer : data Position_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Position_Buffer.impl;

DATA T_String
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 260; suggested aligned message buffer is...
    Source_Data_Size => 264 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-String";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_String;

DATA T_String_Buffer_Max
END T_String_Buffer_Max;

DATA IMPLEMENTATION T_String_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_String
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (264); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_String_Buffer_Max.impl;

DATA T_String_Buffer
END T_String_Buffer;

DATA IMPLEMENTATION T_String_Buffer.impl
    -- Buffer to hold a marshalled data of type T_String
SUBCOMPONENTS
    Buffer : data T_String_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_String_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-types.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Int64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int64";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int64;

DATA T_Int64_Buffer_Max
END T_Int64_Buffer_Max;

DATA IMPLEMENTATION T_Int64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int64_Buffer_Max.impl;

DATA T_Int64_Buffer
END T_Int64_Buffer;

DATA IMPLEMENTATION T_Int64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int64
SUBCOMPONENTS
    Buffer : data T_Int64_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int64_Buffer.impl;

DATA T_Int16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int16";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int16;

DATA T_Int16_Buffer_Max
END T_Int16_Buffer_Max;

DATA IMPLEMENTATION T_Int16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int16_Buffer_Max.impl;

DATA T_Int16_Buffer
END T_Int16_Buffer;

DATA IMPLEMENTATION T_Int16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int16
SUBCOMPONENTS
    Buffer : data T_Int16_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int16_Buffer.impl;

DATA Quaterniond
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Quaterniond";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Quaterniond;

DATA Quaterniond_Buffer_Max
END Quaterniond_Buffer_Max;

DATA IMPLEMENTATION Quaterniond_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Quaterniond
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Quaterniond_Buffer_Max.impl;

DATA Quaterniond_Buffer
END Quaterniond_Buffer;

DATA IMPLEMENTATION Quaterniond_Buffer.impl
    -- Buffer to hold a marshalled data of type Quaterniond
SUBCOMPONENTS
    Buffer : data Quaterniond_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Quaterniond_Buffer.impl;

DATA VizkitPluginLabel
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/vizkit3d/Vizkit3D.asn");
    Ada_Package_Name => "Vizkit3D_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VizkitPluginLabel";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END VizkitPluginLabel;

DATA VizkitPluginLabel_Buffer_Max
END VizkitPluginLabel_Buffer_Max;

DATA IMPLEMENTATION VizkitPluginLabel_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VizkitPluginLabel
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END VizkitPluginLabel_Buffer_Max.impl;

DATA VizkitPluginLabel_Buffer
END VizkitPluginLabel_Buffer;

DATA IMPLEMENTATION VizkitPluginLabel_Buffer.impl
    -- Buffer to hold a marshalled data of type VizkitPluginLabel
SUBCOMPONENTS
    Buffer : data VizkitPluginLabel_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VizkitPluginLabel_Buffer.impl;

DATA DEPTH_MEASUREMENT_STATE
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/DepthMap.asn");
    Ada_Package_Name => "DepthMap_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "DEPTH-MEASUREMENT-STATE";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END DEPTH_MEASUREMENT_STATE;

DATA DEPTH_MEASUREMENT_STATE_Buffer_Max
END DEPTH_MEASUREMENT_STATE_Buffer_Max;

DATA IMPLEMENTATION DEPTH_MEASUREMENT_STATE_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type DEPTH_MEASUREMENT_STATE
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END DEPTH_MEASUREMENT_STATE_Buffer_Max.impl;

DATA DEPTH_MEASUREMENT_STATE_Buffer
END DEPTH_MEASUREMENT_STATE_Buffer;

DATA IMPLEMENTATION DEPTH_MEASUREMENT_STATE_Buffer.impl
    -- Buffer to hold a marshalled data of type DEPTH_MEASUREMENT_STATE
SUBCOMPONENTS
    Buffer : data DEPTH_MEASUREMENT_STATE_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END DEPTH_MEASUREMENT_STATE_Buffer.impl;

DATA LASER_RANGE_ERRORS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/LaserScan.asn");
    Ada_Package_Name => "LaserScan_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LASER-RANGE-ERRORS";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LASER_RANGE_ERRORS;

DATA LASER_RANGE_ERRORS_Buffer_Max
END LASER_RANGE_ERRORS_Buffer_Max;

DATA IMPLEMENTATION LASER_RANGE_ERRORS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LASER_RANGE_ERRORS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LASER_RANGE_ERRORS_Buffer_Max.impl;

DATA LASER_RANGE_ERRORS_Buffer
END LASER_RANGE_ERRORS_Buffer;

DATA IMPLEMENTATION LASER_RANGE_ERRORS_Buffer.impl
    -- Buffer to hold a marshalled data of type LASER_RANGE_ERRORS
SUBCOMPONENTS
    Buffer : data LASER_RANGE_ERRORS_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LASER_RANGE_ERRORS_Buffer.impl;

DATA InvalidTimeStep
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointsTrajectory.asn");
    Ada_Package_Name => "JointsTrajectory_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "InvalidTimeStep";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END InvalidTimeStep;

DATA InvalidTimeStep_Buffer_Max
END InvalidTimeStep_Buffer_Max;

DATA IMPLEMENTATION InvalidTimeStep_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type InvalidTimeStep
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END InvalidTimeStep_Buffer_Max.impl;

DATA InvalidTimeStep_Buffer
END InvalidTimeStep_Buffer;

DATA IMPLEMENTATION InvalidTimeStep_Buffer.impl
    -- Buffer to hold a marshalled data of type InvalidTimeStep
SUBCOMPONENTS
    Buffer : data InvalidTimeStep_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END InvalidTimeStep_Buffer.impl;

DATA Resolution
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Time.asn");
    Ada_Package_Name => "Time_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Resolution";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END Resolution;

DATA Resolution_Buffer_Max
END Resolution_Buffer_Max;

DATA IMPLEMENTATION Resolution_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Resolution
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Resolution_Buffer_Max.impl;

DATA Resolution_Buffer
END Resolution_Buffer;

DATA IMPLEMENTATION Resolution_Buffer.impl
    -- Buffer to hold a marshalled data of type Resolution
SUBCOMPONENTS
    Buffer : data Resolution_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Resolution_Buffer.impl;

DATA Waypoint
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Waypoint.asn");
    Ada_Package_Name => "Waypoint_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 79; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Waypoint";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Waypoint;

DATA Waypoint_Buffer_Max
END Waypoint_Buffer_Max;

DATA IMPLEMENTATION Waypoint_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Waypoint
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Waypoint_Buffer_Max.impl;

DATA Waypoint_Buffer
END Waypoint_Buffer;

DATA IMPLEMENTATION Waypoint_Buffer.impl
    -- Buffer to hold a marshalled data of type Waypoint
SUBCOMPONENTS
    Buffer : data Waypoint_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Waypoint_Buffer.impl;

DATA JointsTrajectory
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointsTrajectory.asn");
    Ada_Package_Name => "JointsTrajectory_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 250195; suggested aligned message buffer is...
    Source_Data_Size => 250200 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "JointsTrajectory";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END JointsTrajectory;

DATA JointsTrajectory_Buffer_Max
END JointsTrajectory_Buffer_Max;

DATA IMPLEMENTATION JointsTrajectory_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type JointsTrajectory
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (250200); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END JointsTrajectory_Buffer_Max.impl;

DATA JointsTrajectory_Buffer
END JointsTrajectory_Buffer;

DATA IMPLEMENTATION JointsTrajectory_Buffer.impl
    -- Buffer to hold a marshalled data of type JointsTrajectory
SUBCOMPONENTS
    Buffer : data JointsTrajectory_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END JointsTrajectory_Buffer.impl;

DATA LC_StopStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-StopStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_StopStatus;

DATA LC_StopStatus_Buffer_Max
END LC_StopStatus_Buffer_Max;

DATA IMPLEMENTATION LC_StopStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_StopStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_StopStatus_Buffer_Max.impl;

DATA LC_StopStatus_Buffer
END LC_StopStatus_Buffer;

DATA IMPLEMENTATION LC_StopStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_StopStatus
SUBCOMPONENTS
    Buffer : data LC_StopStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_StopStatus_Buffer.impl;

DATA MatrixXd
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 5214; suggested aligned message buffer is...
    Source_Data_Size => 5216 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MatrixXd";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END MatrixXd;

DATA MatrixXd_Buffer_Max
END MatrixXd_Buffer_Max;

DATA IMPLEMENTATION MatrixXd_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MatrixXd
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (5216); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MatrixXd_Buffer_Max.impl;

DATA MatrixXd_Buffer
END MatrixXd_Buffer;

DATA IMPLEMENTATION MatrixXd_Buffer.impl
    -- Buffer to hold a marshalled data of type MatrixXd
SUBCOMPONENTS
    Buffer : data MatrixXd_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MatrixXd_Buffer.impl;

DATA Joints
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Joints.asn");
    Ada_Package_Name => "Joints_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 9677; suggested aligned message buffer is...
    Source_Data_Size => 9680 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Joints";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Joints;

DATA Joints_Buffer_Max
END Joints_Buffer_Max;

DATA IMPLEMENTATION Joints_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Joints
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (9680); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Joints_Buffer_Max.impl;

DATA Joints_Buffer
END Joints_Buffer;

DATA IMPLEMENTATION Joints_Buffer.impl
    -- Buffer to hold a marshalled data of type Joints
SUBCOMPONENTS
    Buffer : data Joints_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Joints_Buffer.impl;

DATA LaserScan
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/LaserScan.asn");
    Ada_Package_Name => "LaserScan_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1081; suggested aligned message buffer is...
    Source_Data_Size => 1088 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LaserScan";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LaserScan;

DATA LaserScan_Buffer_Max
END LaserScan_Buffer_Max;

DATA IMPLEMENTATION LaserScan_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LaserScan
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1088); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LaserScan_Buffer_Max.impl;

DATA LaserScan_Buffer
END LaserScan_Buffer;

DATA IMPLEMENTATION LaserScan_Buffer.impl
    -- Buffer to hold a marshalled data of type LaserScan
SUBCOMPONENTS
    Buffer : data LaserScan_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LaserScan_Buffer.impl;

DATA LC_ConfigureResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-ConfigureResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_ConfigureResult;

DATA LC_ConfigureResult_Buffer_Max
END LC_ConfigureResult_Buffer_Max;

DATA IMPLEMENTATION LC_ConfigureResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_ConfigureResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_ConfigureResult_Buffer_Max.impl;

DATA LC_ConfigureResult_Buffer
END LC_ConfigureResult_Buffer;

DATA IMPLEMENTATION LC_ConfigureResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_ConfigureResult
SUBCOMPONENTS
    Buffer : data LC_ConfigureResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_ConfigureResult_Buffer.impl;

DATA LoggerFunctionID
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn");
    Ada_Package_Name => "Logger_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LoggerFunctionID";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END LoggerFunctionID;

DATA LoggerFunctionID_Buffer_Max
END LoggerFunctionID_Buffer_Max;

DATA IMPLEMENTATION LoggerFunctionID_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LoggerFunctionID
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LoggerFunctionID_Buffer_Max.impl;

DATA LoggerFunctionID_Buffer
END LoggerFunctionID_Buffer;

DATA IMPLEMENTATION LoggerFunctionID_Buffer.impl
    -- Buffer to hold a marshalled data of type LoggerFunctionID
SUBCOMPONENTS
    Buffer : data LoggerFunctionID_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LoggerFunctionID_Buffer.impl;

DATA UNIT_AXIS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/DepthMap.asn");
    Ada_Package_Name => "DepthMap_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UNIT-AXIS";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END UNIT_AXIS;

DATA UNIT_AXIS_Buffer_Max
END UNIT_AXIS_Buffer_Max;

DATA IMPLEMENTATION UNIT_AXIS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UNIT_AXIS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END UNIT_AXIS_Buffer_Max.impl;

DATA UNIT_AXIS_Buffer
END UNIT_AXIS_Buffer;

DATA IMPLEMENTATION UNIT_AXIS_Buffer.impl
    -- Buffer to hold a marshalled data of type UNIT_AXIS
SUBCOMPONENTS
    Buffer : data UNIT_AXIS_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UNIT_AXIS_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-types.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA DepthMap
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/DepthMap.asn");
    Ada_Package_Name => "DepthMap_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 3864; suggested aligned message buffer is...
    Source_Data_Size => 3864 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "DepthMap";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END DepthMap;

DATA DepthMap_Buffer_Max
END DepthMap_Buffer_Max;

DATA IMPLEMENTATION DepthMap_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type DepthMap
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (3864); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END DepthMap_Buffer_Max.impl;

DATA DepthMap_Buffer
END DepthMap_Buffer;

DATA IMPLEMENTATION DepthMap_Buffer.impl
    -- Buffer to hold a marshalled data of type DepthMap
SUBCOMPONENTS
    Buffer : data DepthMap_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END DepthMap_Buffer.impl;

DATA LoggerFile
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn");
    Ada_Package_Name => "Logger_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 256; suggested aligned message buffer is...
    Source_Data_Size => 256 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LoggerFile";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END LoggerFile;

DATA LoggerFile_Buffer_Max
END LoggerFile_Buffer_Max;

DATA IMPLEMENTATION LoggerFile_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LoggerFile
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (256); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LoggerFile_Buffer_Max.impl;

DATA LoggerFile_Buffer
END LoggerFile_Buffer;

DATA IMPLEMENTATION LoggerFile_Buffer.impl
    -- Buffer to hold a marshalled data of type LoggerFile
SUBCOMPONENTS
    Buffer : data LoggerFile_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LoggerFile_Buffer.impl;

DATA Matrix6d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 471; suggested aligned message buffer is...
    Source_Data_Size => 472 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix6d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix6d;

DATA Matrix6d_Buffer_Max
END Matrix6d_Buffer_Max;

DATA IMPLEMENTATION Matrix6d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix6d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (472); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Matrix6d_Buffer_Max.impl;

DATA Matrix6d_Buffer
END Matrix6d_Buffer;

DATA IMPLEMENTATION Matrix6d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix6d
SUBCOMPONENTS
    Buffer : data Matrix6d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix6d_Buffer.impl;

DATA Matrix3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 118; suggested aligned message buffer is...
    Source_Data_Size => 120 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Matrix3d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Matrix3d;

DATA Matrix3d_Buffer_Max
END Matrix3d_Buffer_Max;

DATA IMPLEMENTATION Matrix3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Matrix3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (120); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Matrix3d_Buffer_Max.impl;

DATA Matrix3d_Buffer
END Matrix3d_Buffer;

DATA IMPLEMENTATION Matrix3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Matrix3d
SUBCOMPONENTS
    Buffer : data Matrix3d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Matrix3d_Buffer.impl;

DATA Temperature
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Temperature.asn");
    Ada_Package_Name => "Temperature_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Temperature";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Temperature;

DATA Temperature_Buffer_Max
END Temperature_Buffer_Max;

DATA IMPLEMENTATION Temperature_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Temperature
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Temperature_Buffer_Max.impl;

DATA Temperature_Buffer
END Temperature_Buffer;

DATA IMPLEMENTATION Temperature_Buffer.impl
    -- Buffer to hold a marshalled data of type Temperature
SUBCOMPONENTS
    Buffer : data Temperature_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Temperature_Buffer.impl;

DATA Point
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Point.asn");
    Ada_Package_Name => "Point_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Point";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Point;

DATA Point_Buffer_Max
END Point_Buffer_Max;

DATA IMPLEMENTATION Point_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Point
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Point_Buffer_Max.impl;

DATA Point_Buffer
END Point_Buffer;

DATA IMPLEMENTATION Point_Buffer.impl
    -- Buffer to hold a marshalled data of type Point
SUBCOMPONENTS
    Buffer : data Point_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Point_Buffer.impl;

DATA T_Float
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Float";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END T_Float;

DATA T_Float_Buffer_Max
END T_Float_Buffer_Max;

DATA IMPLEMENTATION T_Float_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Float
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Float_Buffer_Max.impl;

DATA T_Float_Buffer
END T_Float_Buffer;

DATA IMPLEMENTATION T_Float_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Float
SUBCOMPONENTS
    Buffer : data T_Float_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Float_Buffer.impl;

DATA Vector3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector3d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector3d;

DATA Vector3d_Buffer_Max
END Vector3d_Buffer_Max;

DATA IMPLEMENTATION Vector3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Vector3d_Buffer_Max.impl;

DATA Vector3d_Buffer
END Vector3d_Buffer;

DATA IMPLEMENTATION Vector3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector3d
SUBCOMPONENTS
    Buffer : data Vector3d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector3d_Buffer.impl;

DATA LC_ExceptionStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-ExceptionStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_ExceptionStatus;

DATA LC_ExceptionStatus_Buffer_Max
END LC_ExceptionStatus_Buffer_Max;

DATA IMPLEMENTATION LC_ExceptionStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_ExceptionStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_ExceptionStatus_Buffer_Max.impl;

DATA LC_ExceptionStatus_Buffer
END LC_ExceptionStatus_Buffer;

DATA IMPLEMENTATION LC_ExceptionStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_ExceptionStatus
SUBCOMPONENTS
    Buffer : data LC_ExceptionStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_ExceptionStatus_Buffer.impl;

DATA Trajectory
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Trajectory.asn");
    Ada_Package_Name => "Trajectory_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1977; suggested aligned message buffer is...
    Source_Data_Size => 1984 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Trajectory";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Trajectory;

DATA Trajectory_Buffer_Max
END Trajectory_Buffer_Max;

DATA IMPLEMENTATION Trajectory_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Trajectory
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1984); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Trajectory_Buffer_Max.impl;

DATA Trajectory_Buffer
END Trajectory_Buffer;

DATA IMPLEMENTATION Trajectory_Buffer.impl
    -- Buffer to hold a marshalled data of type Trajectory
SUBCOMPONENTS
    Buffer : data Trajectory_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Trajectory_Buffer.impl;

DATA T_UInt64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt64";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt64;

DATA T_UInt64_Buffer_Max
END T_UInt64_Buffer_Max;

DATA IMPLEMENTATION T_UInt64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt64_Buffer_Max.impl;

DATA T_UInt64_Buffer
END T_UInt64_Buffer;

DATA IMPLEMENTATION T_UInt64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt64
SUBCOMPONENTS
    Buffer : data T_UInt64_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt64_Buffer.impl;

DATA LoggerTimestamp
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn");
    Ada_Package_Name => "Logger_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LoggerTimestamp";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END LoggerTimestamp;

DATA LoggerTimestamp_Buffer_Max
END LoggerTimestamp_Buffer_Max;

DATA IMPLEMENTATION LoggerTimestamp_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LoggerTimestamp
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LoggerTimestamp_Buffer_Max.impl;

DATA LoggerTimestamp_Buffer
END LoggerTimestamp_Buffer;

DATA IMPLEMENTATION LoggerTimestamp_Buffer.impl
    -- Buffer to hold a marshalled data of type LoggerTimestamp
SUBCOMPONENTS
    Buffer : data LoggerTimestamp_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LoggerTimestamp_Buffer.impl;

DATA FramePair
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Frame.asn");
    Ada_Package_Name => "Frame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4723992; suggested aligned message buffer is...
    Source_Data_Size => 4723992 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "FramePair";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END FramePair;

DATA FramePair_Buffer_Max
END FramePair_Buffer_Max;

DATA IMPLEMENTATION FramePair_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type FramePair
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (4723992); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END FramePair_Buffer_Max.impl;

DATA FramePair_Buffer
END FramePair_Buffer;

DATA IMPLEMENTATION FramePair_Buffer.impl
    -- Buffer to hold a marshalled data of type FramePair
SUBCOMPONENTS
    Buffer : data FramePair_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END FramePair_Buffer.impl;

DATA JointLimits
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointLimits.asn");
    Ada_Package_Name => "JointLimits_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8058; suggested aligned message buffer is...
    Source_Data_Size => 8064 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "JointLimits";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END JointLimits;

DATA JointLimits_Buffer_Max
END JointLimits_Buffer_Max;

DATA IMPLEMENTATION JointLimits_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type JointLimits
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8064); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END JointLimits_Buffer_Max.impl;

DATA JointLimits_Buffer
END JointLimits_Buffer;

DATA IMPLEMENTATION JointLimits_Buffer.impl
    -- Buffer to hold a marshalled data of type JointLimits
SUBCOMPONENTS
    Buffer : data JointLimits_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END JointLimits_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-types.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA LC_StopResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-StopResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_StopResult;

DATA LC_StopResult_Buffer_Max
END LC_StopResult_Buffer_Max;

DATA IMPLEMENTATION LC_StopResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_StopResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_StopResult_Buffer_Max.impl;

DATA LC_StopResult_Buffer
END LC_StopResult_Buffer;

DATA IMPLEMENTATION LC_StopResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_StopResult
SUBCOMPONENTS
    Buffer : data LC_StopResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_StopResult_Buffer.impl;

DATA MarsFilePath
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/mars/Mars.asn");
    Ada_Package_Name => "Mars_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 256; suggested aligned message buffer is...
    Source_Data_Size => 256 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MarsFilePath";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END MarsFilePath;

DATA MarsFilePath_Buffer_Max
END MarsFilePath_Buffer_Max;

DATA IMPLEMENTATION MarsFilePath_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MarsFilePath
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (256); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MarsFilePath_Buffer_Max.impl;

DATA MarsFilePath_Buffer
END MarsFilePath_Buffer;

DATA IMPLEMENTATION MarsFilePath_Buffer.impl
    -- Buffer to hold a marshalled data of type MarsFilePath
SUBCOMPONENTS
    Buffer : data MarsFilePath_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MarsFilePath_Buffer.impl;

DATA Position2D
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pose.asn");
    Ada_Package_Name => "Pose_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 27; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Position2D";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Position2D;

DATA Position2D_Buffer_Max
END Position2D_Buffer_Max;

DATA IMPLEMENTATION Position2D_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Position2D
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Position2D_Buffer_Max.impl;

DATA Position2D_Buffer
END Position2D_Buffer;

DATA IMPLEMENTATION Position2D_Buffer.impl
    -- Buffer to hold a marshalled data of type Position2D
SUBCOMPONENTS
    Buffer : data Position2D_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Position2D_Buffer.impl;

DATA LC_State
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-State";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_State;

DATA LC_State_Buffer_Max
END LC_State_Buffer_Max;

DATA IMPLEMENTATION LC_State_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_State
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_State_Buffer_Max.impl;

DATA LC_State_Buffer
END LC_State_Buffer;

DATA IMPLEMENTATION LC_State_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_State
SUBCOMPONENTS
    Buffer : data LC_State_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_State_Buffer.impl;

DATA OutOfBounds
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointLimitRange.asn");
    Ada_Package_Name => "JointLimitRange_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 297; suggested aligned message buffer is...
    Source_Data_Size => 304 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OutOfBounds";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END OutOfBounds;

DATA OutOfBounds_Buffer_Max
END OutOfBounds_Buffer_Max;

DATA IMPLEMENTATION OutOfBounds_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OutOfBounds
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (304); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END OutOfBounds_Buffer_Max.impl;

DATA OutOfBounds_Buffer
END OutOfBounds_Buffer;

DATA IMPLEMENTATION OutOfBounds_Buffer.impl
    -- Buffer to hold a marshalled data of type OutOfBounds
SUBCOMPONENTS
    Buffer : data OutOfBounds_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END OutOfBounds_Buffer.impl;

DATA Orientation
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pose.asn");
    Ada_Package_Name => "Pose_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 53; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Orientation";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Orientation;

DATA Orientation_Buffer_Max
END Orientation_Buffer_Max;

DATA IMPLEMENTATION Orientation_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Orientation
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Orientation_Buffer_Max.impl;

DATA Orientation_Buffer
END Orientation_Buffer;

DATA IMPLEMENTATION Orientation_Buffer.impl
    -- Buffer to hold a marshalled data of type Orientation
SUBCOMPONENTS
    Buffer : data Orientation_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Orientation_Buffer.impl;

DATA IMUSensors
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/IMUSensors.asn");
    Ada_Package_Name => "IMUSensors_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 130; suggested aligned message buffer is...
    Source_Data_Size => 136 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "IMUSensors";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END IMUSensors;

DATA IMUSensors_Buffer_Max
END IMUSensors_Buffer_Max;

DATA IMPLEMENTATION IMUSensors_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type IMUSensors
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (136); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END IMUSensors_Buffer_Max.impl;

DATA IMUSensors_Buffer
END IMUSensors_Buffer;

DATA IMPLEMENTATION IMUSensors_Buffer.impl
    -- Buffer to hold a marshalled data of type IMUSensors
SUBCOMPONENTS
    Buffer : data IMUSensors_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END IMUSensors_Buffer.impl;

DATA Pointcloud
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Pointcloud.asn");
    Ada_Package_Name => "Pointcloud_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 5504; suggested aligned message buffer is...
    Source_Data_Size => 5504 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pointcloud";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Pointcloud;

DATA Pointcloud_Buffer_Max
END Pointcloud_Buffer_Max;

DATA IMPLEMENTATION Pointcloud_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pointcloud
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (5504); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Pointcloud_Buffer_Max.impl;

DATA Pointcloud_Buffer
END Pointcloud_Buffer;

DATA IMPLEMENTATION Pointcloud_Buffer.impl
    -- Buffer to hold a marshalled data of type Pointcloud
SUBCOMPONENTS
    Buffer : data Pointcloud_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pointcloud_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-types.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA Frame_status_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/Frame.asn");
    Ada_Package_Name => "Frame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame-status-t";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END Frame_status_t;

DATA Frame_status_t_Buffer_Max
END Frame_status_t_Buffer_Max;

DATA IMPLEMENTATION Frame_status_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame_status_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Frame_status_t_Buffer_Max.impl;

DATA Frame_status_t_Buffer
END Frame_status_t_Buffer;

DATA IMPLEMENTATION Frame_status_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame_status_t
SUBCOMPONENTS
    Buffer : data Frame_status_t_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_status_t_Buffer.impl;

DATA VizkitFilePath
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/vizkit3d/Vizkit3D.asn");
    Ada_Package_Name => "Vizkit3D_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 256; suggested aligned message buffer is...
    Source_Data_Size => 256 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VizkitFilePath";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END VizkitFilePath;

DATA VizkitFilePath_Buffer_Max
END VizkitFilePath_Buffer_Max;

DATA IMPLEMENTATION VizkitFilePath_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VizkitFilePath
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (256); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END VizkitFilePath_Buffer_Max.impl;

DATA VizkitFilePath_Buffer
END VizkitFilePath_Buffer;

DATA IMPLEMENTATION VizkitFilePath_Buffer.impl
    -- Buffer to hold a marshalled data of type VizkitFilePath
SUBCOMPONENTS
    Buffer : data VizkitFilePath_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END VizkitFilePath_Buffer.impl;

DATA Motion2D
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Motion2D.asn");
    Ada_Package_Name => "Motion2D_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 26; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Motion2D";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Motion2D;

DATA Motion2D_Buffer_Max
END Motion2D_Buffer_Max;

DATA IMPLEMENTATION Motion2D_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Motion2D
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Motion2D_Buffer_Max.impl;

DATA Motion2D_Buffer
END Motion2D_Buffer;

DATA IMPLEMENTATION Motion2D_Buffer.impl
    -- Buffer to hold a marshalled data of type Motion2D
SUBCOMPONENTS
    Buffer : data Motion2D_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Motion2D_Buffer.impl;

DATA LoggerText
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn");
    Ada_Package_Name => "Logger_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 260; suggested aligned message buffer is...
    Source_Data_Size => 264 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LoggerText";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END LoggerText;

DATA LoggerText_Buffer_Max
END LoggerText_Buffer_Max;

DATA IMPLEMENTATION LoggerText_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LoggerText
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (264); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LoggerText_Buffer_Max.impl;

DATA LoggerText_Buffer
END LoggerText_Buffer;

DATA IMPLEMENTATION LoggerText_Buffer.impl
    -- Buffer to hold a marshalled data of type LoggerText
SUBCOMPONENTS
    Buffer : data LoggerText_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LoggerText_Buffer.impl;

DATA LoggerMessage
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/logger/Logger.asn");
    Ada_Package_Name => "Logger_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 280; suggested aligned message buffer is...
    Source_Data_Size => 280 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LoggerMessage";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LoggerMessage;

DATA LoggerMessage_Buffer_Max
END LoggerMessage_Buffer_Max;

DATA IMPLEMENTATION LoggerMessage_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LoggerMessage
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (280); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LoggerMessage_Buffer_Max.impl;

DATA LoggerMessage_Buffer
END LoggerMessage_Buffer;

DATA IMPLEMENTATION LoggerMessage_Buffer.impl
    -- Buffer to hold a marshalled data of type LoggerMessage
SUBCOMPONENTS
    Buffer : data LoggerMessage_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LoggerMessage_Buffer.impl;

DATA JointLimitRange
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/JointLimitRange.asn");
    Ada_Package_Name => "JointLimitRange_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 130; suggested aligned message buffer is...
    Source_Data_Size => 136 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "JointLimitRange";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END JointLimitRange;

DATA JointLimitRange_Buffer_Max
END JointLimitRange_Buffer_Max;

DATA IMPLEMENTATION JointLimitRange_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type JointLimitRange
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (136); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END JointLimitRange_Buffer_Max.impl;

DATA JointLimitRange_Buffer
END JointLimitRange_Buffer;

DATA IMPLEMENTATION JointLimitRange_Buffer.impl
    -- Buffer to hold a marshalled data of type JointLimitRange
SUBCOMPONENTS
    Buffer : data JointLimitRange_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END JointLimitRange_Buffer.impl;

DATA LC_ExceptionResult
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-ExceptionResult";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END LC_ExceptionResult;

DATA LC_ExceptionResult_Buffer_Max
END LC_ExceptionResult_Buffer_Max;

DATA IMPLEMENTATION LC_ExceptionResult_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_ExceptionResult
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_ExceptionResult_Buffer_Max.impl;

DATA LC_ExceptionResult_Buffer
END LC_ExceptionResult_Buffer;

DATA IMPLEMENTATION LC_ExceptionResult_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_ExceptionResult
SUBCOMPONENTS
    Buffer : data LC_ExceptionResult_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_ExceptionResult_Buffer.impl;

DATA Vector6d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 79; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector6d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector6d;

DATA Vector6d_Buffer_Max
END Vector6d_Buffer_Max;

DATA IMPLEMENTATION Vector6d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector6d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Vector6d_Buffer_Max.impl;

DATA Vector6d_Buffer
END Vector6d_Buffer;

DATA IMPLEMENTATION Vector6d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector6d
SUBCOMPONENTS
    Buffer : data Vector6d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector6d_Buffer.impl;

DATA Isometry3d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 210; suggested aligned message buffer is...
    Source_Data_Size => 216 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Isometry3d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Isometry3d;

DATA Isometry3d_Buffer_Max
END Isometry3d_Buffer_Max;

DATA IMPLEMENTATION Isometry3d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Isometry3d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Isometry3d_Buffer_Max.impl;

DATA Isometry3d_Buffer
END Isometry3d_Buffer;

DATA IMPLEMENTATION Isometry3d_Buffer.impl
    -- Buffer to hold a marshalled data of type Isometry3d
SUBCOMPONENTS
    Buffer : data Isometry3d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Isometry3d_Buffer.impl;

DATA Pose2D
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pose.asn");
    Ada_Package_Name => "Pose_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pose2D";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Pose2D;

DATA Pose2D_Buffer_Max
END Pose2D_Buffer_Max;

DATA IMPLEMENTATION Pose2D_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pose2D
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Pose2D_Buffer_Max.impl;

DATA Pose2D_Buffer
END Pose2D_Buffer;

DATA IMPLEMENTATION Pose2D_Buffer.impl
    -- Buffer to hold a marshalled data of type Pose2D
SUBCOMPONENTS
    Buffer : data Pose2D_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pose2D_Buffer.impl;

DATA T_Double
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/taste-extended.asn");
    Ada_Package_Name => "TASTE_ExtendedTypes";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Double";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END T_Double;

DATA T_Double_Buffer_Max
END T_Double_Buffer_Max;

DATA IMPLEMENTATION T_Double_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Double
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Double_Buffer_Max.impl;

DATA T_Double_Buffer
END T_Double_Buffer;

DATA IMPLEMENTATION T_Double_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Double
SUBCOMPONENTS
    Buffer : data T_Double_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Double_Buffer.impl;

DATA Frame_compressed_mode_t
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/sensor_samples/CompressedFrame.asn");
    Ada_Package_Name => "CompressedFrame_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Frame-compressed-mode-t";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END Frame_compressed_mode_t;

DATA Frame_compressed_mode_t_Buffer_Max
END Frame_compressed_mode_t_Buffer_Max;

DATA IMPLEMENTATION Frame_compressed_mode_t_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Frame_compressed_mode_t
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Frame_compressed_mode_t_Buffer_Max.impl;

DATA Frame_compressed_mode_t_Buffer
END Frame_compressed_mode_t_Buffer;

DATA IMPLEMENTATION Frame_compressed_mode_t_Buffer.impl
    -- Buffer to hold a marshalled data of type Frame_compressed_mode_t
SUBCOMPONENTS
    Buffer : data Frame_compressed_mode_t_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Frame_compressed_mode_t_Buffer.impl;

DATA Vector2d
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Eigen.asn");
    Ada_Package_Name => "Eigen_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 27; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Vector2d";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Vector2d;

DATA Vector2d_Buffer_Max
END Vector2d_Buffer_Max;

DATA IMPLEMENTATION Vector2d_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Vector2d
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Vector2d_Buffer_Max.impl;

DATA Vector2d_Buffer
END Vector2d_Buffer;

DATA IMPLEMENTATION Vector2d_Buffer.impl
    -- Buffer to hold a marshalled data of type Vector2d
SUBCOMPONENTS
    Buffer : data Vector2d_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Vector2d_Buffer.impl;

DATA PoseUpdateThreshold
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/base/Pose.asn");
    Ada_Package_Name => "Pose_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 26; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PoseUpdateThreshold";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PoseUpdateThreshold;

DATA PoseUpdateThreshold_Buffer_Max
END PoseUpdateThreshold_Buffer_Max;

DATA IMPLEMENTATION PoseUpdateThreshold_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PoseUpdateThreshold
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PoseUpdateThreshold_Buffer_Max.impl;

DATA PoseUpdateThreshold_Buffer
END PoseUpdateThreshold_Buffer;

DATA IMPLEMENTATION PoseUpdateThreshold_Buffer.impl
    -- Buffer to hold a marshalled data of type PoseUpdateThreshold
SUBCOMPONENTS
    Buffer : data PoseUpdateThreshold_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END PoseUpdateThreshold_Buffer.impl;

DATA LC_ErrorStatus
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/root/esrocos_workspace/install/types/core/asn/lifecycle/ComponentLifecycle.asn");
    Ada_Package_Name => "ComponentLifecycle_Types";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "LC-ErrorStatus";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END LC_ErrorStatus;

DATA LC_ErrorStatus_Buffer_Max
END LC_ErrorStatus_Buffer_Max;

DATA IMPLEMENTATION LC_ErrorStatus_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type LC_ErrorStatus
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END LC_ErrorStatus_Buffer_Max.impl;

DATA LC_ErrorStatus_Buffer
END LC_ErrorStatus_Buffer;

DATA IMPLEMENTATION LC_ErrorStatus_Buffer.impl
    -- Buffer to hold a marshalled data of type LC_ErrorStatus
SUBCOMPONENTS
    Buffer : data LC_ErrorStatus_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END LC_ErrorStatus_Buffer.impl;

end DataView;
